# Generated by Django 4.2.2 on 2023-06-24 18:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('route', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('bus_number', models.CharField(max_length=255, unique=True)),
                ('pos_serial_no', models.FileField(blank=True, null=True, upload_to='upload/assets')),
                ('pos_dsn_number', models.CharField(blank=True, max_length=255, null=True)),
                ('gps_sim_image', models.FileField(blank=True, null=True, upload_to='upload/assets')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='BusRoute',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('from_town', models.CharField(default='from town', max_length=255)),
                ('to_town', models.CharField(default='to town', max_length=255)),
                ('start_time', models.TimeField(default='00:00:00')),
                ('arrival_time', models.TimeField(default='00:00:00')),
                ('name', models.CharField(max_length=255, null=True)),
                ('bus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.bus')),
                ('route', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='route.route')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='BusRouteTown',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('duration', models.IntegerField(null=True)),
                ('calculated_duration', models.IntegerField(null=True)),
                ('day', models.IntegerField(default=0, null=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('bus_route', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.busroute')),
                ('route_town', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='route.routetown')),
            ],
        ),
        migrations.CreateModel(
            name='BusRouteTownStoppage',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('duration', models.IntegerField(null=True)),
                ('start_time', models.TimeField(null=True)),
                ('calculated_start_time', models.TimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('bus_route_town', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bus_route_town', to='bus.busroutetown')),
                ('route_town_stoppage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='route.routetownstoppage')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteTownStoppageJourney',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('arrival_time', models.DateTimeField(null=True)),
                ('departure_time', models.DateTimeField(null=True)),
                ('geofence_status', models.CharField(choices=[('approaching', 'approaching'), ('inside', 'inside'), ('departed', 'departed'), ('gps_outage', 'gps_outage'), ('skipped', 'skipped'), ('in_queue', 'in_queue')], max_length=25, null=True)),
                ('arrival_time_type', models.CharField(choices=[('default', 'default'), ('gmaps', 'gmaps'), ('gps', 'gps')], max_length=50, null=True)),
                ('gps_time', models.DateTimeField(null=True)),
                ('gmaps_time', models.DateTimeField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route_town_stoppage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroutetownstoppage')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical bus route town stoppage journey',
                'verbose_name_plural': 'historical bus route town stoppage journeys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteTownStoppage',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('duration', models.IntegerField(null=True)),
                ('start_time', models.TimeField(null=True)),
                ('calculated_start_time', models.TimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route_town', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroutetown')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route_town_stoppage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.routetownstoppage')),
            ],
            options={
                'verbose_name': 'historical bus route town stoppage',
                'verbose_name_plural': 'historical bus route town stoppages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteTown',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('duration', models.IntegerField(null=True)),
                ('calculated_duration', models.IntegerField(null=True)),
                ('day', models.IntegerField(default=0, null=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroute')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route_town', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.routetown')),
            ],
            options={
                'verbose_name': 'historical bus route town',
                'verbose_name_plural': 'historical bus route towns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteJourney',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('start_time', models.DateTimeField()),
                ('calculated_start_time', models.TimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready'), ('scheduled', 'scheduled'), ('started', 'started'), ('completed', 'completed')], default='active', max_length=20)),
                ('gps_status', models.BooleanField(default=False)),
                ('calculated_start_time_type', models.CharField(choices=[('default', 'default'), ('gmaps', 'gmaps'), ('gps', 'gps')], max_length=50, null=True)),
                ('gps_status_active_till', models.DateTimeField(null=True)),
                ('is_settled', models.BooleanField(default=False)),
                ('journey_extender_status', models.CharField(max_length=50, null=True)),
                ('created_late', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroute')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical bus route journey',
                'verbose_name_plural': 'historical bus route journeys',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRoute',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('from_town', models.CharField(default='from town', max_length=255)),
                ('to_town', models.CharField(default='to town', max_length=255)),
                ('start_time', models.TimeField(default='00:00:00')),
                ('arrival_time', models.TimeField(default='00:00:00')),
                ('name', models.CharField(max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.bus')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.route')),
            ],
            options={
                'verbose_name': 'historical bus route',
                'verbose_name_plural': 'historical bus routes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusPhotograph',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('bus_photograph_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('photograph', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(choices=[('bus_photograph', 'bus_photograph'), ('rc', 'rc')], max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.bus')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical bus photograph',
                'verbose_name_plural': 'historical bus photographs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='BusRouteTownStoppageJourney',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('arrival_time', models.DateTimeField(null=True)),
                ('departure_time', models.DateTimeField(null=True)),
                ('geofence_status', models.CharField(choices=[('approaching', 'approaching'), ('inside', 'inside'), ('departed', 'departed'), ('gps_outage', 'gps_outage'), ('skipped', 'skipped'), ('in_queue', 'in_queue')], max_length=25, null=True)),
                ('arrival_time_type', models.CharField(choices=[('default', 'default'), ('gmaps', 'gmaps'), ('gps', 'gps')], max_length=50, null=True)),
                ('gps_time', models.DateTimeField(null=True)),
                ('gmaps_time', models.DateTimeField(null=True)),
                ('bus_route_town_stoppage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bus_route_town_stoppage', to='bus.busroutetownstoppage')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='BusRouteJourney',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('calculated_start_time', models.TimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready'), ('scheduled', 'scheduled'), ('started', 'started'), ('completed', 'completed')], default='active', max_length=20)),
                ('gps_status', models.BooleanField(default=False)),
                ('calculated_start_time_type', models.CharField(choices=[('default', 'default'), ('gmaps', 'gmaps'), ('gps', 'gps')], max_length=50, null=True)),
                ('gps_status_active_till', models.DateTimeField(null=True)),
                ('is_settled', models.BooleanField(default=False)),
                ('journey_extender_status', models.CharField(max_length=50, null=True)),
                ('created_late', models.BooleanField(default=False)),
                ('bus_route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.busroute')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='BusPhotograph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('bus_photograph_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('photograph', models.FileField(blank=True, null=True, upload_to='bus/')),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(choices=[('bus_photograph', 'bus_photograph'), ('rc', 'rc')], max_length=255)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.bus')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.AddConstraint(
            model_name='busroutetown',
            constraint=models.UniqueConstraint(fields=('bus_route', 'route_town'), name='UC_bus_route_route_town'),
        ),
    ]
