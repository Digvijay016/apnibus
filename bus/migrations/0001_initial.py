# Generated by Django 3.2.7 on 2023-07-12 12:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('route', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('category', models.CharField(choices=[('g', 'General'), ('e', 'Express'), ('l', 'Luxury')], default='g', max_length=255)),
                ('brand', models.CharField(max_length=255, null=True)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_power_plug', models.BooleanField(default=False)),
                ('is_sanitized', models.BooleanField(default=False)),
                ('is_air_conditioned', models.BooleanField(default=False)),
                ('operating_as', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('conductor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('conductor_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('seat_type', models.CharField(choices=[('se', 'Seater'), ('sl', 'Sleeper'), ('ss', 'Seater Sleeper'), ('usis', 'Upper Single Sleeper'), ('ushs', 'Upper Sharing Sleeper'), ('r', 'Recliner')], default='se', max_length=50)),
                ('layout_type', models.CharField(choices=[('2+1', '2+1'), ('2+2', '2+2'), ('1+2', '1+2'), ('2+3', '2+3'), ('3+3', '3+3')], default='2+1', max_length=255)),
                ('is_multi_axle', models.BooleanField(default=False)),
                ('normal_seats_capacity', models.PositiveIntegerField(default=0)),
                ('single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('recliner_capacity', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('o', 'Onboarded'), ('a', 'Active'), ('i', 'Inactive')], default='o', max_length=255)),
                ('gps_status', models.CharField(choices=[('ip', 'In Progress'), ('i', 'Installed'), ('ni', 'Not Installed'), ('f', 'Faulty'), ('l', 'Live')], default='ni', max_length=255)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('digital_commission', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('cash_commission', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('is_booking_allowed', models.BooleanField(default=True)),
                ('is_qr_booking_allowed', models.BooleanField(default=True)),
                ('is_pos_connected', models.BooleanField(default=True)),
                ('printing_enabled', models.BooleanField(default=False)),
                ('trips_access', models.BooleanField(default=True)),
                ('print_bus_number', models.BooleanField(default=True)),
                ('access_password', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_header', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_footer', models.CharField(default='ApniBus वॉलेट में ₹250 तक जीतें, नीचे दिए नंबर पर कॉल करें', max_length=255)),
                ('subscription_pending', models.BooleanField(default=False)),
                ('apply_concession', models.BooleanField(default=True)),
                ('apply_bus_discount', models.BooleanField(default=False)),
                ('apply_qr_discount', models.BooleanField(default=False)),
                ('show_passenger_in_poc', models.BooleanField(default=True)),
                ('online_app_booking_commission', models.CharField(choices=[('p', 'Percentage'), ('f', 'Fixed'), ('bo', 'Booking Off')], default='p', max_length=255, null=True)),
                ('qr_booking_commission', models.CharField(choices=[('f', 'Full Amount'), ('bo', 'Booking Off')], default='f', max_length=255, null=True)),
                ('bus_number', models.CharField(blank=True, max_length=255, unique=True)),
                ('pos_serial_no', models.ImageField(blank=True, max_length=255, upload_to='')),
                ('pos_dsn_number', models.CharField(blank=True, max_length=255)),
                ('gps_sim_image', models.ImageField(blank=True, max_length=255, upload_to='')),
                ('operator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='account.operator')),
            ],
        ),
        migrations.CreateModel(
            name='BusRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('start_time', models.TimeField(default='00:00:00')),
                ('arrival_time', models.TimeField(default='00:00:00')),
                ('routes', models.JSONField(blank=True, default=list)),
                ('towns', models.JSONField(blank=True, default=list)),
                ('return_id', models.CharField(blank=True, default='', max_length=255)),
                ('bus', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='bus.bus')),
                ('from_town', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='bus_route_from_town_FK', to='route.town')),
                ('route_selected', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='route.route')),
                ('to_town', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='bus_route_to_town_FK', to='route.town')),
            ],
        ),
        migrations.CreateModel(
            name='BusRouteTown',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('towns', models.JSONField(blank=True, default=list)),
                ('days', models.CharField(choices=[('same_day', 'Same Day'), ('next_day', 'Next Day')], default='', max_length=100)),
                ('another_trip', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=100)),
                ('bus_route', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='bus.busroute')),
                ('route', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='route.route')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteTownStoppage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('duration', models.IntegerField(blank=True)),
                ('start_time', models.TimeField(blank=True)),
                ('calculated_duration', models.IntegerField(blank=True)),
                ('calculated_start_time', models.TimeField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route_town', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroutetown')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route_town_stoppage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.routetownstoppage')),
            ],
            options={
                'verbose_name': 'historical bus route town stoppage',
                'verbose_name_plural': 'historical bus route town stoppages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteTown',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('towns', models.JSONField(blank=True, default=list)),
                ('days', models.CharField(choices=[('same_day', 'Same Day'), ('next_day', 'Next Day')], default='', max_length=100)),
                ('another_trip', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroute')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.route')),
            ],
            options={
                'verbose_name': 'historical bus route town',
                'verbose_name_plural': 'historical bus route towns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRoutesTowns',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('duration', models.IntegerField(blank=True)),
                ('calculated_duration', models.IntegerField(blank=True)),
                ('towns', models.JSONField(blank=True, default=list)),
                ('day', models.IntegerField(blank=True, default=0)),
                ('town_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('town_stoppage_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.route')),
            ],
            options={
                'verbose_name': 'historical bus routes towns',
                'verbose_name_plural': 'historical bus routes townss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRouteMissingTown',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('missing_town', models.CharField(blank=True, default='town', max_length=255)),
                ('duration', models.IntegerField(blank=True, default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus_route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.busroute')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical bus route missing town',
                'verbose_name_plural': 'historical bus route missing towns',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusRoute',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('start_time', models.TimeField(default='00:00:00')),
                ('arrival_time', models.TimeField(default='00:00:00')),
                ('routes', models.JSONField(blank=True, default=list)),
                ('towns', models.JSONField(blank=True, default=list)),
                ('return_id', models.CharField(blank=True, default='', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='bus.bus')),
                ('from_town', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.town')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route_selected', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.route')),
                ('to_town', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='route.town')),
            ],
            options={
                'verbose_name': 'historical bus route',
                'verbose_name_plural': 'historical bus routes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBus',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('category', models.CharField(choices=[('g', 'General'), ('e', 'Express'), ('l', 'Luxury')], default='g', max_length=255)),
                ('brand', models.CharField(max_length=255, null=True)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_power_plug', models.BooleanField(default=False)),
                ('is_sanitized', models.BooleanField(default=False)),
                ('is_air_conditioned', models.BooleanField(default=False)),
                ('operating_as', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('conductor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('conductor_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('seat_type', models.CharField(choices=[('se', 'Seater'), ('sl', 'Sleeper'), ('ss', 'Seater Sleeper'), ('usis', 'Upper Single Sleeper'), ('ushs', 'Upper Sharing Sleeper'), ('r', 'Recliner')], default='se', max_length=50)),
                ('layout_type', models.CharField(choices=[('2+1', '2+1'), ('2+2', '2+2'), ('1+2', '1+2'), ('2+3', '2+3'), ('3+3', '3+3')], default='2+1', max_length=255)),
                ('is_multi_axle', models.BooleanField(default=False)),
                ('normal_seats_capacity', models.PositiveIntegerField(default=0)),
                ('single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('recliner_capacity', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('o', 'Onboarded'), ('a', 'Active'), ('i', 'Inactive')], default='o', max_length=255)),
                ('gps_status', models.CharField(choices=[('ip', 'In Progress'), ('i', 'Installed'), ('ni', 'Not Installed'), ('f', 'Faulty'), ('l', 'Live')], default='ni', max_length=255)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('digital_commission', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('cash_commission', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('is_booking_allowed', models.BooleanField(default=True)),
                ('is_qr_booking_allowed', models.BooleanField(default=True)),
                ('is_pos_connected', models.BooleanField(default=True)),
                ('printing_enabled', models.BooleanField(default=False)),
                ('trips_access', models.BooleanField(default=True)),
                ('print_bus_number', models.BooleanField(default=True)),
                ('access_password', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_header', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_footer', models.CharField(default='ApniBus वॉलेट में ₹250 तक जीतें, नीचे दिए नंबर पर कॉल करें', max_length=255)),
                ('subscription_pending', models.BooleanField(default=False)),
                ('apply_concession', models.BooleanField(default=True)),
                ('apply_bus_discount', models.BooleanField(default=False)),
                ('apply_qr_discount', models.BooleanField(default=False)),
                ('show_passenger_in_poc', models.BooleanField(default=True)),
                ('online_app_booking_commission', models.CharField(choices=[('p', 'Percentage'), ('f', 'Fixed'), ('bo', 'Booking Off')], default='p', max_length=255, null=True)),
                ('qr_booking_commission', models.CharField(choices=[('f', 'Full Amount'), ('bo', 'Booking Off')], default='f', max_length=255, null=True)),
                ('bus_number', models.CharField(blank=True, db_index=True, max_length=255)),
                ('pos_serial_no', models.TextField(blank=True, max_length=255)),
                ('pos_dsn_number', models.CharField(blank=True, max_length=255)),
                ('gps_sim_image', models.TextField(blank=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.operator')),
            ],
            options={
                'verbose_name': 'historical bus',
                'verbose_name_plural': 'historical buss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='BusRouteTownStoppage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('duration', models.IntegerField(blank=True)),
                ('start_time', models.TimeField(blank=True)),
                ('calculated_duration', models.IntegerField(blank=True)),
                ('calculated_start_time', models.TimeField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('bus_route_town', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='bus_route_town', to='bus.busroutetown')),
                ('route_town_stoppage', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='route.routetownstoppage')),
            ],
        ),
        migrations.CreateModel(
            name='BusRoutesTowns',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('duration', models.IntegerField(blank=True)),
                ('calculated_duration', models.IntegerField(blank=True)),
                ('towns', models.JSONField(blank=True, default=list)),
                ('day', models.IntegerField(blank=True, default=0)),
                ('town_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('town_stoppage_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('eta_status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive'), ('request_for_deletion', 'request_for_deletion'), ('deletion_ready', 'deletion_ready')], default='active', max_length=20)),
                ('route', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='route.route')),
            ],
        ),
        migrations.CreateModel(
            name='BusRouteMissingTown',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('missing_town', models.CharField(blank=True, default='town', max_length=255)),
                ('duration', models.IntegerField(blank=True, default=0)),
                ('bus_route', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.busroute')),
            ],
        ),
    ]
