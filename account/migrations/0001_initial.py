# Generated by Django 4.2.2 on 2023-06-21 11:25

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(max_length=255, unique=True)),
                ('category', models.CharField(choices=[('general', 'general'), ('express', 'express'), ('luxury', 'luxury')], default='general', max_length=255)),
                ('brand', models.CharField(max_length=255, null=True)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_power_plug', models.BooleanField(default=False)),
                ('is_sanitized', models.BooleanField(default=False)),
                ('is_air_conditioned', models.BooleanField(default=False)),
                ('operating_as', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('conductor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('conductor_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('seat_type', models.CharField(choices=[('seater', 'seater'), ('sleeper', 'sleeper'), ('seater_sleeper', 'seater_sleeper'), ('upper_single_sleeper', 'upper_single_sleeper'), ('upper_sharing_sleeper', 'upper_sharing_sleeper'), ('recliner', 'recliner')], max_length=50)),
                ('layout_type', models.CharField(choices=[('2+1', '2+1'), ('2+2', '2+2'), ('1+2', '1+2'), ('2+3', '2+3'), ('3+3', '3+3')], default='2+1', max_length=255)),
                ('is_multi_axle', models.BooleanField(default=False)),
                ('normal_seats_capacity', models.PositiveIntegerField(default=0)),
                ('single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('recliner_capacity', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('onboarded', 'onboarded'), ('active', 'active'), ('inactive', 'inactive')], default='onboarded', max_length=255)),
                ('gps_status', models.CharField(choices=[('in_progress', 'in_progress'), ('installed', 'installed'), ('not_installed', 'not_installed'), ('faulty', 'faulty'), ('live', 'live')], default='not_installed', max_length=255)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('digital_commission', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('cash_commission', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('is_booking_allowed', models.BooleanField(default=True)),
                ('is_qr_booking_allowed', models.BooleanField(default=True)),
                ('is_pos_connected', models.BooleanField(default=True)),
                ('printing_enabled', models.BooleanField(default=False)),
                ('trips_access', models.BooleanField(default=True)),
                ('print_bus_number', models.BooleanField(default=True)),
                ('access_password', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_header', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_footer', models.CharField(default='ApniBus वॉलेट में ₹250 तक जीतें, नीचे दिए नंबर पर कॉल करें', max_length=255)),
                ('subscription_pending', models.BooleanField(default=False)),
                ('apply_concession', models.BooleanField(default=True)),
                ('apply_bus_discount', models.BooleanField(default=False)),
                ('apply_qr_discount', models.BooleanField(default=False)),
                ('show_passenger_in_poc', models.BooleanField(default=True)),
                ('online_app_booking_commission', models.CharField(choices=[('percentage', 'percentage'), ('fixed', 'fixed'), ('booking_off', 'booking_off')], default='percentage', max_length=255, null=True)),
                ('qr_booking_commission', models.CharField(choices=[('full_amount', 'full_amount'), ('booking_off', 'booking_off')], default='full_amount', max_length=255, null=True)),
                ('is_ticket_amount_editable', models.BooleanField(default=False)),
                ('is_show_seat_type', models.BooleanField(default=False)),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('hindi_name', models.CharField(max_length=255, null=True)),
                ('owner', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=20, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('town', models.CharField(default='', max_length=255, null=True)),
                ('gstin', models.CharField(blank=True, max_length=20, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('aadhar_number', models.CharField(blank=True, max_length=20, null=True)),
                ('poc_name', models.CharField(blank=True, max_length=20, null=True)),
                ('poc_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bus_count', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('show_qr_code', models.BooleanField(default=True)),
                ('show_ticket_msg', models.BooleanField(default=True)),
                ('show_brand_name', models.BooleanField(default=True)),
                ('show_mob_number', models.BooleanField(default=True)),
                ('show_deductions', models.BooleanField(default=False)),
                ('subscription_pending', models.BooleanField(default=False)),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('onboarded', 'onboarded'), ('deboarded', 'deboarded'), ('locked', 'locked')], default='onboarded', max_length=225)),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('admin', 'admin'), ('conductor', 'conductor'), ('commuter', 'commuter'), ('internal_user', 'internal_user'), ('operator', 'operator'), ('bus_driver', 'bus_driver'), ('pos_device', 'pos_device'), ('conductor_se', 'conductor_se'), ('operator_sales_lead', 'operator_sales_lead')], max_length=25)),
                ('preferred_language', models.CharField(choices=[('english', 'english'), ('hindi', 'hindi')], default='english', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserAuthenticationOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('otp', models.CharField(max_length=6)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_valid', models.BooleanField(default=True)),
                ('mobile', models.CharField(max_length=10)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.user')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OperatorPhotograph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('operator_photograph_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('photograph', models.FileField(blank=True, null=True, upload_to='operator/')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.operator')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='OperatorBankAccount',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('ifsc', models.CharField(blank=True, max_length=20, null=True)),
                ('account_type', models.CharField(choices=[('current', 'current'), ('saving', 'saving')], max_length=20)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='account.operator')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='operator',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='operator_user', to='account.user'),
        ),
        migrations.CreateModel(
            name='HistoricalUserAuthenticationOTP',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('otp', models.CharField(max_length=6)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_valid', models.BooleanField(default=True)),
                ('mobile', models.CharField(max_length=10)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.user')),
            ],
            options={
                'verbose_name': 'historical user authentication otp',
                'verbose_name_plural': 'historical user authentication otps',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('user_type', models.CharField(choices=[('admin', 'admin'), ('conductor', 'conductor'), ('commuter', 'commuter'), ('internal_user', 'internal_user'), ('operator', 'operator'), ('bus_driver', 'bus_driver'), ('pos_device', 'pos_device'), ('conductor_se', 'conductor_se'), ('operator_sales_lead', 'operator_sales_lead')], max_length=25)),
                ('preferred_language', models.CharField(choices=[('english', 'english'), ('hindi', 'hindi')], default='english', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user',
                'verbose_name_plural': 'historical users',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOperatorPhotograph',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('operator_photograph_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('photograph', models.TextField(blank=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.operator')),
            ],
            options={
                'verbose_name': 'historical operator photograph',
                'verbose_name_plural': 'historical operator photographs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOperatorBankAccount',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('ifsc', models.CharField(blank=True, max_length=20, null=True)),
                ('account_type', models.CharField(choices=[('current', 'current'), ('saving', 'saving')], max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.operator')),
            ],
            options={
                'verbose_name': 'historical operator bank account',
                'verbose_name_plural': 'historical operator bank accounts',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOperator',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('hindi_name', models.CharField(max_length=255, null=True)),
                ('owner', models.CharField(max_length=255)),
                ('mobile', models.CharField(db_index=True, max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('town', models.CharField(default='', max_length=255, null=True)),
                ('gstin', models.CharField(blank=True, max_length=20, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=20, null=True)),
                ('aadhar_number', models.CharField(blank=True, max_length=20, null=True)),
                ('poc_name', models.CharField(blank=True, max_length=20, null=True)),
                ('poc_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bus_count', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('show_qr_code', models.BooleanField(default=True)),
                ('show_ticket_msg', models.BooleanField(default=True)),
                ('show_brand_name', models.BooleanField(default=True)),
                ('show_mob_number', models.BooleanField(default=True)),
                ('show_deductions', models.BooleanField(default=False)),
                ('subscription_pending', models.BooleanField(default=False)),
                ('version', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(choices=[('onboarded', 'onboarded'), ('deboarded', 'deboarded'), ('locked', 'locked')], default='onboarded', max_length=225)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.user')),
            ],
            options={
                'verbose_name': 'historical operator',
                'verbose_name_plural': 'historical operators',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBusPhotograph',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('bus_photograph_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('photograph', models.TextField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(choices=[('bus_photograph', 'bus_photograph'), ('rc', 'rc')], max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bus', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.bus')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical bus photograph',
                'verbose_name_plural': 'historical bus photographs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBus',
            fields=[
                ('created_on', models.DateTimeField(blank=True, db_column='created_on', editable=False)),
                ('updated_on', models.DateTimeField(blank=True, db_column='updated_on', editable=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid1, editable=False)),
                ('number', models.CharField(db_index=True, max_length=255)),
                ('category', models.CharField(choices=[('general', 'general'), ('express', 'express'), ('luxury', 'luxury')], default='general', max_length=255)),
                ('brand', models.CharField(max_length=255, null=True)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_power_plug', models.BooleanField(default=False)),
                ('is_sanitized', models.BooleanField(default=False)),
                ('is_air_conditioned', models.BooleanField(default=False)),
                ('operating_as', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('driver_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('conductor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('conductor_contact', models.CharField(blank=True, max_length=20, null=True)),
                ('seat_type', models.CharField(choices=[('seater', 'seater'), ('sleeper', 'sleeper'), ('seater_sleeper', 'seater_sleeper'), ('upper_single_sleeper', 'upper_single_sleeper'), ('upper_sharing_sleeper', 'upper_sharing_sleeper'), ('recliner', 'recliner')], max_length=50)),
                ('layout_type', models.CharField(choices=[('2+1', '2+1'), ('2+2', '2+2'), ('1+2', '1+2'), ('2+3', '2+3'), ('3+3', '3+3')], default='2+1', max_length=255)),
                ('is_multi_axle', models.BooleanField(default=False)),
                ('normal_seats_capacity', models.PositiveIntegerField(default=0)),
                ('single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_single_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('upper_sharing_sleeper_capacity', models.PositiveIntegerField(default=0)),
                ('recliner_capacity', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('onboarded', 'onboarded'), ('active', 'active'), ('inactive', 'inactive')], default='onboarded', max_length=255)),
                ('gps_status', models.CharField(choices=[('in_progress', 'in_progress'), ('installed', 'installed'), ('not_installed', 'not_installed'), ('faulty', 'faulty'), ('live', 'live')], default='not_installed', max_length=255)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('digital_commission', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('cash_commission', models.IntegerField(validators=[django.core.validators.MaxValueValidator(30), django.core.validators.MinValueValidator(0)])),
                ('is_booking_allowed', models.BooleanField(default=True)),
                ('is_qr_booking_allowed', models.BooleanField(default=True)),
                ('is_pos_connected', models.BooleanField(default=True)),
                ('printing_enabled', models.BooleanField(default=False)),
                ('trips_access', models.BooleanField(default=True)),
                ('print_bus_number', models.BooleanField(default=True)),
                ('access_password', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_header', models.CharField(blank=True, max_length=255, null=True)),
                ('ticket_footer', models.CharField(default='ApniBus वॉलेट में ₹250 तक जीतें, नीचे दिए नंबर पर कॉल करें', max_length=255)),
                ('subscription_pending', models.BooleanField(default=False)),
                ('apply_concession', models.BooleanField(default=True)),
                ('apply_bus_discount', models.BooleanField(default=False)),
                ('apply_qr_discount', models.BooleanField(default=False)),
                ('show_passenger_in_poc', models.BooleanField(default=True)),
                ('online_app_booking_commission', models.CharField(choices=[('percentage', 'percentage'), ('fixed', 'fixed'), ('booking_off', 'booking_off')], default='percentage', max_length=255, null=True)),
                ('qr_booking_commission', models.CharField(choices=[('full_amount', 'full_amount'), ('booking_off', 'booking_off')], default='full_amount', max_length=255, null=True)),
                ('is_ticket_amount_editable', models.BooleanField(default=False)),
                ('is_show_seat_type', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('operator', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='account.operator')),
            ],
            options={
                'verbose_name': 'historical bus',
                'verbose_name_plural': 'historical buss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='BusPhotograph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_column='created_on')),
                ('updated_on', models.DateTimeField(auto_now=True, db_column='updated_on')),
                ('is_deleted', models.BooleanField(default=False)),
                ('bus_photograph_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('photograph', models.FileField(blank=True, null=True, upload_to='bus/')),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(choices=[('bus_photograph', 'bus_photograph'), ('rc', 'rc')], max_length=255)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.bus')),
            ],
            options={
                'get_latest_by': 'updated_on',
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='bus',
            name='operator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_bus', to='account.operator'),
        ),
    ]
